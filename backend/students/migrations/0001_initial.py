# Generated by Django 3.2.3 on 2023-10-28 11:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import students.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('student', 'Студент'), ('academic_leave', 'Академический отпуск'), ('graduate', 'Выпускник'), ('expelled', 'Отчислен')], help_text='Выберите академический статус студента.', max_length=150, verbose_name='Академический статус')),
            ],
            options={
                'verbose_name': 'Академический статус',
                'verbose_name_plural': 'Академические статусы',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text='Укажите номер телефона студента.', max_length=20, region=None, unique=True, verbose_name='Номер телефона')),
                ('alternate_email', models.EmailField(help_text='Укажите дополнительный адрес электронной почты студента.', max_length=254, verbose_name='Дополнительный адрес электронной почты')),
                ('telegram_login', models.CharField(blank=True, help_text='Укажите логин студента в Telegram (при наличии).', max_length=100, null=True, verbose_name='Логин в Telegram')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='Укажите место обучения.', max_length=100, verbose_name='Место обучения')),
                ('specialization', models.CharField(help_text='Укажите специальность.', max_length=100, verbose_name='Специальность')),
                ('education_level', models.CharField(blank=True, choices=[('school', 'Среднее образование'), ('college', 'Средне-специальное образование'), ('university', 'Высшее образование'), ('postgrad', 'Ученая степень')], help_text='Выберите уровень образования студента (при наличии).', max_length=100, null=True, verbose_name='Уровень образования')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('job_search', 'Ищу работу'), ('employed', 'Трудоустроен'), ('internship_search', 'В поиске стажировки'), ('other', 'Другое')], help_text='Выберите статус трудоустройства студента.', max_length=100, verbose_name='Статус трудоустройства')),
            ],
            options={
                'verbose_name': 'Статус трудоустройства',
                'verbose_name_plural': 'Статусы трудоустройства',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('junior', 'Junior'), ('middle', 'Middle')], help_text='Выберите грейд студента.', max_length=100, verbose_name='Грейд')),
            ],
            options={
                'verbose_name': 'Грейд',
                'verbose_name_plural': 'Грейды',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажите язык и уровень владения.', max_length=100)),
            ],
            options={
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите наименование местоположения.', max_length=100, verbose_name='Наименование местоположения')),
            ],
            options={
                'verbose_name': 'Местоположение',
                'verbose_name_plural': 'Местоположения',
            },
        ),
        migrations.CreateModel(
            name='PortfolioLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Портфолио-ссылка',
                'verbose_name_plural': 'Портфолио-ссылки',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Укажите название проекта.', max_length=100, verbose_name='Название проекта')),
                ('description', models.TextField(help_text='Укажите краткое описание проекта.', verbose_name='Описание проекта')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите наименование навыка.', max_length=100, verbose_name='Наименование навыка')),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('frontend_dev', 'Фронтенд-разработчик'), ('fullstack_dev', 'Фулстек-разработчик'), ('python_dev', 'Python-разработчик'), ('qa_engineer', 'Инженер по тестированию'), ('java_dev', 'Java-разработчик'), ('data_scientist', 'Специалист по data-science'), ('designer', 'Дизайнер интерфейсов'), ('product_designer', 'Продуктовый дизайнер'), ('project_manager', 'Менеджер проектов')], help_text='Выберите специализацию студента.', max_length=100, verbose_name='Специализация')),
            ],
            options={
                'verbose_name': 'Специализация',
                'verbose_name_plural': 'Специализации',
            },
        ),
        migrations.CreateModel(
            name='StudentResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, help_text='Укажите дату рождения студента (при наличии).', null=True, verbose_name='Дата рождения')),
                ('photo', models.ImageField(blank=True, help_text='Загрузите фотографию студента (при наличии).', null=True, upload_to=students.utils.student_photo_upload, verbose_name='Фото')),
                ('description', models.TextField(blank=True, help_text='Введите описание студента (при наличии).', null=True, verbose_name='О себе')),
                ('resume', models.FileField(blank=True, help_text='Загрузите резюме студента (при наличии).', null=True, upload_to=students.utils.student_resume_upload, verbose_name='Резюме')),
                ('has_higher_education', models.BooleanField(default=False, help_text='Укажите, имеет ли студент высшее образование.', verbose_name='Высшее образование')),
                ('has_participated_in_hackathons', models.BooleanField(default=False, help_text='Укажите, участвовал ли студент в хакатонах.', verbose_name='Участие в хакатонах')),
                ('has_personal_projects', models.BooleanField(default=False, help_text='Укажите, есть ли у студента пет-проекты.', verbose_name='Наличие пет-проектов')),
                ('skills_verified', models.BooleanField(default=False, help_text='Укажите, подтверждены ли навыки студента.', verbose_name='Навыки подтверждены')),
                ('has_video_presentation', models.BooleanField(default=False, help_text='Укажите, есть ли у студента видео-презентация.', verbose_name='С видео-презентацией')),
                ('viewed', models.BooleanField(default=False, verbose_name='Отметка о просмотре')),
                ('academic_status', models.ForeignKey(blank=True, help_text='Выберите учебный статус студента (при наличии).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.academicstatus', verbose_name='Учебный статус')),
                ('contact_info', models.OneToOneField(help_text='Выберите контактную информацию для профиля студента.', on_delete=django.db.models.deletion.CASCADE, to='students.contactinfo', verbose_name='Контактная информация')),
                ('courses', models.ManyToManyField(blank=True, related_name='student_specializations', to='students.Course', verbose_name='Курсы')),
                ('educations', models.ManyToManyField(blank=True, help_text='Выберите уровень образования студента (при наличии).', to='students.Education', verbose_name='Уровень образования')),
                ('employment_status', models.ForeignKey(blank=True, help_text='Выберите статус трудоустройства студента (при наличии).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.employmentstatus', verbose_name='Статус трудоустройства')),
                ('grade', models.ForeignKey(blank=True, help_text='Выберите грейд студента (при наличии).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.grade', verbose_name='Грейд')),
                ('languages', models.ManyToManyField(blank=True, to='students.Language', verbose_name='Языки')),
                ('location', models.ForeignKey(blank=True, help_text='Выберите местоположение студента (при наличии).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.location', verbose_name='Местоположение')),
                ('portfolio', models.ManyToManyField(blank=True, to='students.PortfolioLink', verbose_name='Портфолио-ссылки')),
                ('projects', models.ManyToManyField(blank=True, to='students.Project', verbose_name='Проекты')),
                ('specialization', models.ForeignKey(blank=True, help_text='Выберите специализацию', on_delete=django.db.models.deletion.CASCADE, to='students.specialization', verbose_name='Специализация')),
                ('user', models.OneToOneField(help_text='Выберите пользователя и свяжите его с профилем студента.', on_delete=django.db.models.deletion.CASCADE, related_name='student_resume', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Резюме',
                'verbose_name_plural': 'Резюме',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажите название места работы студента.', max_length=100, verbose_name='Название места работы')),
                ('start_date', models.DateField(help_text='Укажите дату начала работы на данном месте.', verbose_name='Дата начала работы')),
                ('end_date', models.DateField(blank=True, help_text='Укажите дату окончания работы.', null=True, verbose_name='Дата окончания работы')),
                ('description', models.TextField(blank=True, help_text='Добавьте описание опыта работы на данном месте.', null=True, verbose_name='Описание опыта работы')),
            ],
            options={
                'verbose_name': 'Опыт работы',
                'verbose_name_plural': 'Опыт работы',
            },
        ),
        migrations.CreateModel(
            name='StudentResumeSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.skill')),
                ('student_resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.studentresume')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResumeProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.project')),
                ('student_resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.studentresume')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResumeLanguages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.language')),
                ('student_resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.studentresume')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResumeEducations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.education')),
                ('student_resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.studentresume')),
            ],
        ),
        migrations.AddField(
            model_name='studentresume',
            name='work_experience',
            field=models.ManyToManyField(blank=True, help_text='Выберите опыт работы студента (при наличии).', to='students.WorkExperience', verbose_name='Опыт работы'),
        ),
        migrations.CreateModel(
            name='FavoriteResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Дата, когда резюме было добавлено в избранное.', verbose_name='Дата добавления')),
                ('resume', models.ForeignKey(help_text='Выберите резюме, добавляемое в избранное.', on_delete=django.db.models.deletion.CASCADE, related_name='favorited_resumes', to='students.studentresume', verbose_name='Избранное резюме')),
                ('user', models.ForeignKey(help_text='Выберите пользователя, который добавляет резюме в избранное.', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_by', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранные резюме',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='skills',
            field=models.ManyToManyField(related_name='courses', to='students.Skill', verbose_name='Навыки'),
        ),
        migrations.AddField(
            model_name='course',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='students.specialization', verbose_name='Специализация'),
        ),
        migrations.AddConstraint(
            model_name='favoriteresume',
            constraint=models.UniqueConstraint(fields=('user', 'resume'), name='unique_user_resume'),
        ),
    ]
